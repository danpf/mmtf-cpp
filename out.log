Generate bindings, pass 1...
Generate bindings, pass 2...
Generate bindings, pass 3...
Generate bindings, pass 4...
Generate bindings, pass 5...
Sorting Binders...
Sorting Binders... Done.
Writing code...
Writing code... Done.
-- The C compiler identification is GNU 7.3.0
-- The CXX compiler identification is GNU 7.3.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: /home/danpf/git/mmtf-cpp/cmake_bindings
[1/26] Building CXX object CMakeFiles/mmtf.dir/std/stl_vector_3.o
FAILED: CMakeFiles/mmtf.dir/std/stl_vector_3.o 
/usr/bin/c++  -DNDEBUG -Dmmtf_EXPORTS -I/home/danpf/git/binder/source -I../include -I/home/danpf/git/binder/build/pybind11/include -I/home/danpf/miniconda3/envs/py3/include/python3.6m -I../msgpack-c/include -fPIC -MD -MT CMakeFiles/mmtf.dir/std/stl_vector_3.o -MF CMakeFiles/mmtf.dir/std/stl_vector_3.o.d -o CMakeFiles/mmtf.dir/std/stl_vector_3.o -c std/stl_vector_3.cpp
std/stl_vector_3.cpp: In function ‘void bind_std_stl_vector_3(std::function<pybind11::module&(const std::__cxx11::basic_string<char>&)>&)’:
std/stl_vector_3.cpp:105:339: error: no matches converting function ‘resize’ to type ‘void (class std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > >::*)(long unsigned int, class std::vector<float, std::allocator<float> >)’
   cl.def("resize", (void (std::vector<std::vector<float, std::allocator<float> >,std::allocator<std::vector<float, std::allocator<float> > >>::*)(unsigned long, class std::vector<float, class std::allocator<float> >)) &std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > >::resize, "C++: std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > >::resize(unsigned long, class std::vector<float, class std::allocator<float> >) --> void", pybind11::arg("__new_size"), pybind11::arg("__x"));
                                                                                                                                                                                                                                                                                                                                                   ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector_3.cpp:26:
/usr/include/c++/7/bits/stl_vector.h:709:7: note: candidates are: void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<float, std::allocator<float> >; _Alloc = std::allocator<std::vector<float, std::allocator<float> > >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<float, std::allocator<float> >]
       resize(size_type __new_size, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:689:7: note:                 void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type) [with _Tp = std::vector<float, std::allocator<float> >; _Alloc = std::allocator<std::vector<float, std::allocator<float> > >; std::vector<_Tp, _Alloc>::size_type = long unsigned int]
       resize(size_type __new_size)
       ^~~~~~
std/stl_vector_3.cpp:116:826: error: no matches converting function ‘insert’ to type ‘class __gnu_cxx::__normal_iterator<std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > > (class std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > >::*)(class __gnu_cxx::__normal_iterator<std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >, const class std::vector<float, std::allocator<float> >&)’
   cl.def("insert", (class __gnu_cxx::__normal_iterator<class std::vector<float, class std::allocator<float> > *, class std::vector<class std::vector<float, class std::allocator<float> >, class std::allocator<class std::vector<float, class std::allocator<float> > > > > (std::vector<std::vector<float, std::allocator<float> >,std::allocator<std::vector<float, std::allocator<float> > >>::*)(class __gnu_cxx::__normal_iterator<class std::vector<float, class std::allocator<float> > *, class std::vector<class std::vector<float, class std::allocator<float> >, class std::allocator<class std::vector<float, class std::allocator<float> > > > >, const class std::vector<float, class std::allocator<float> > &)) &std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > >::insert, "C++: std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > >::insert(class __gnu_cxx::__normal_iterator<class std::vector<float, class std::allocator<float> > *, class std::vector<class std::vector<float, class std::allocator<float> >, class std::allocator<class std::vector<float, class std::allocator<float> > > > >, const class std::vector<float, class std::allocator<float> > &) --> class __gnu_cxx::__normal_iterator<class std::vector<float, class std::allocator<float> > *, class std::vector<class std::vector<float, class std::allocator<float> >, class std::allocator<class std::vector<float, class std::allocator<float> > > > >", pybind11::arg("__position"), pybind11::arg("__x"));
~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector_3.cpp:26:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::vector<float, std::allocator<float> >; _Alloc = std::allocator<std::vector<float, std::allocator<float> > >]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<float, std::allocator<float> >; _Alloc = std::allocator<std::vector<float, std::allocator<float> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<float, std::allocator<float> >*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::vector<float, std::allocator<float> >*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<float, std::allocator<float> >]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = std::vector<float, std::allocator<float> >; _Alloc = std::allocator<std::vector<float, std::allocator<float> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<float, std::allocator<float> >*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::vector<float, std::allocator<float> >*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::vector<float, std::allocator<float> >; _Alloc = std::allocator<std::vector<float, std::allocator<float> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<float, std::allocator<float> >*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::vector<float, std::allocator<float> >*; std::vector<_Tp, _Alloc>::value_type = std::vector<float, std::allocator<float> >]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from std/stl_vector_3.cpp:26:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = std::vector<float, std::allocator<float> >; _Alloc = std::allocator<std::vector<float, std::allocator<float> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<float, std::allocator<float> >*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::vector<float, std::allocator<float> >*; std::vector<_Tp, _Alloc>::value_type = std::vector<float, std::allocator<float> >]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector_3.cpp:117:597: error: no matches converting function ‘insert’ to type ‘void (class std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > >::*)(class __gnu_cxx::__normal_iterator<std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >, long unsigned int, const class std::vector<float, std::allocator<float> >&)’
   cl.def("insert", (void (std::vector<std::vector<float, std::allocator<float> >,std::allocator<std::vector<float, std::allocator<float> > >>::*)(class __gnu_cxx::__normal_iterator<class std::vector<float, class std::allocator<float> > *, class std::vector<class std::vector<float, class std::allocator<float> >, class std::allocator<class std::vector<float, class std::allocator<float> > > > >, unsigned long, const class std::vector<float, class std::allocator<float> > &)) &std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > >::insert, "C++: std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > >::insert(class __gnu_cxx::__normal_iterator<class std::vector<float, class std::allocator<float> > *, class std::vector<class std::vector<float, class std::allocator<float> >, class std::allocator<class std::vector<float, class std::allocator<float> > > > >, unsigned long, const class std::vector<float, class std::allocator<float> > &) --> void", pybind11::arg("__position"), pybind11::arg("__n"), pybind11::arg("__x"));
~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector_3.cpp:26:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::vector<float, std::allocator<float> >; _Alloc = std::allocator<std::vector<float, std::allocator<float> > >]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<float, std::allocator<float> >; _Alloc = std::allocator<std::vector<float, std::allocator<float> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<float, std::allocator<float> >*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::vector<float, std::allocator<float> >*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<float, std::allocator<float> >]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = std::vector<float, std::allocator<float> >; _Alloc = std::allocator<std::vector<float, std::allocator<float> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<float, std::allocator<float> >*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::vector<float, std::allocator<float> >*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::vector<float, std::allocator<float> >; _Alloc = std::allocator<std::vector<float, std::allocator<float> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<float, std::allocator<float> >*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::vector<float, std::allocator<float> >*; std::vector<_Tp, _Alloc>::value_type = std::vector<float, std::allocator<float> >]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from std/stl_vector_3.cpp:26:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = std::vector<float, std::allocator<float> >; _Alloc = std::allocator<std::vector<float, std::allocator<float> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<float, std::allocator<float> >*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::vector<float, std::allocator<float> >*; std::vector<_Tp, _Alloc>::value_type = std::vector<float, std::allocator<float> >]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector_3.cpp:118:761: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > > (class std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > >::*)(class __gnu_cxx::__normal_iterator<std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<class std::vector<float, class std::allocator<float> > *, class std::vector<class std::vector<float, class std::allocator<float> >, class std::allocator<class std::vector<float, class std::allocator<float> > > > > (std::vector<std::vector<float, std::allocator<float> >,std::allocator<std::vector<float, std::allocator<float> > >>::*)(class __gnu_cxx::__normal_iterator<class std::vector<float, class std::allocator<float> > *, class std::vector<class std::vector<float, class std::allocator<float> >, class std::allocator<class std::vector<float, class std::allocator<float> > > > >)) &std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > >::erase, "C++: std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > >::erase(class __gnu_cxx::__normal_iterator<class std::vector<float, class std::allocator<float> > *, class std::vector<class std::vector<float, class std::allocator<float> >, class std::allocator<class std::vector<float, class std::allocator<float> > > > >) --> class __gnu_cxx::__normal_iterator<class std::vector<float, class std::allocator<float> > *, class std::vector<class std::vector<float, class std::allocator<float> >, class std::allocator<class std::vector<float, class std::allocator<float> > > > >", pybind11::arg("__position"));
~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector_3.cpp:26:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = std::vector<float, std::allocator<float> >; _Alloc = std::allocator<std::vector<float, std::allocator<float> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<float, std::allocator<float> >*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::vector<float, std::allocator<float> >*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = std::vector<float, std::allocator<float> >; _Alloc = std::allocator<std::vector<float, std::allocator<float> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<float, std::allocator<float> >*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::vector<float, std::allocator<float> >*]
       erase(const_iterator __position)
       ^~~~~
std/stl_vector_3.cpp:119:1011: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > > (class std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > >::*)(class __gnu_cxx::__normal_iterator<std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >, class __gnu_cxx::__normal_iterator<std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<class std::vector<float, class std::allocator<float> > *, class std::vector<class std::vector<float, class std::allocator<float> >, class std::allocator<class std::vector<float, class std::allocator<float> > > > > (std::vector<std::vector<float, std::allocator<float> >,std::allocator<std::vector<float, std::allocator<float> > >>::*)(class __gnu_cxx::__normal_iterator<class std::vector<float, class std::allocator<float> > *, class std::vector<class std::vector<float, class std::allocator<float> >, class std::allocator<class std::vector<float, class std::allocator<float> > > > >, class __gnu_cxx::__normal_iterator<class std::vector<float, class std::allocator<float> > *, class std::vector<class std::vector<float, class std::allocator<float> >, class std::allocator<class std::vector<float, class std::allocator<float> > > > >)) &std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > >::erase, "C++: std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > >::erase(class __gnu_cxx::__normal_iterator<class std::vector<float, class std::allocator<float> > *, class std::vector<class std::vector<float, class std::allocator<float> >, class std::allocator<class std::vector<float, class std::allocator<float> > > > >, class __gnu_cxx::__normal_iterator<class std::vector<float, class std::allocator<float> > *, class std::vector<class std::vector<float, class std::allocator<float> >, class std::allocator<class std::vector<float, class std::allocator<float> > > > >) --> class __gnu_cxx::__normal_iterator<class std::vector<float, class std::allocator<float> > *, class std::vector<class std::vector<float, class std::allocator<float> >, class std::allocator<class std::vector<float, class std::allocator<float> > > > >", pybind11::arg("__first"), pybind11::arg("__last"));
~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector_3.cpp:26:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = std::vector<float, std::allocator<float> >; _Alloc = std::allocator<std::vector<float, std::allocator<float> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<float, std::allocator<float> >*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::vector<float, std::allocator<float> >*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = std::vector<float, std::allocator<float> >; _Alloc = std::allocator<std::vector<float, std::allocator<float> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<float, std::allocator<float> >*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::vector<float, std::allocator<float> >*, std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::vector<float, std::allocator<float> >*]
       erase(const_iterator __position)
       ^~~~~
[2/26] Building CXX object CMakeFiles/mmtf.dir/mmtf.o
[3/26] Building CXX object CMakeFiles/mmtf.dir/std/stl_vector.o
FAILED: CMakeFiles/mmtf.dir/std/stl_vector.o 
/usr/bin/c++  -DNDEBUG -Dmmtf_EXPORTS -I/home/danpf/git/binder/source -I../include -I/home/danpf/git/binder/build/pybind11/include -I/home/danpf/miniconda3/envs/py3/include/python3.6m -I../msgpack-c/include -fPIC -MD -MT CMakeFiles/mmtf.dir/std/stl_vector.o -MF CMakeFiles/mmtf.dir/std/stl_vector.o.d -o CMakeFiles/mmtf.dir/std/stl_vector.o -c std/stl_vector.cpp
std/stl_vector.cpp: In function ‘void bind_std_stl_vector(std::function<pybind11::module&(const std::__cxx11::basic_string<char>&)>&)’:
std/stl_vector.cpp:132:220: error: no matches converting function ‘insert’ to type ‘void (class std::vector<char>::*)(class __gnu_cxx::__normal_iterator<char*, std::vector<char> >, const char*, const char*)’
   cl.def("insert", (void (std::vector<char>::*)(class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >, const char *, const char *)) &std::vector<char, std::allocator<char> >::insert<const char *>, "C++: std::vector<char, std::allocator<char> >::insert(class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >, const char *, const char *) --> void", pybind11::arg("__position"), pybind11::arg("__first"), pybind11::arg("__last"));
                                                                                                                                                                                                                            ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector.cpp:60:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = char; _Alloc = std::allocator<char>]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::vector<char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::vector<char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const char*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = char]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::vector<char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::vector<char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const char*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::vector<char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::vector<char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const char*; std::vector<_Tp, _Alloc>::value_type = char]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from std/stl_vector.cpp:60:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::vector<char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::vector<char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const char*; std::vector<_Tp, _Alloc>::value_type = char]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector.cpp:133:308: error: no matches converting function ‘insert’ to type ‘void (class std::vector<char>::*)(class __gnu_cxx::__normal_iterator<char*, std::vector<char> >, class __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >, class __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >)’
   cl.def("insert", (void (std::vector<char>::*)(class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >, class __gnu_cxx::__normal_iterator<char *, std::string >, class __gnu_cxx::__normal_iterator<char *, std::string >)) &std::vector<char, std::allocator<char> >::insert<__gnu_cxx::__normal_iterator<char *, std::string >>, "C++: std::vector<char, std::allocator<char> >::insert(class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >, class __gnu_cxx::__normal_iterator<char *, class std::__cxx11::basic_string<char> >, class __gnu_cxx::__normal_iterator<char *, class std::__cxx11::basic_string<char> >) --> void", pybind11::arg("__position"), pybind11::arg("__first"), pybind11::arg("__last"));
                                                                                                                                                                                                                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector.cpp:60:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = char; _Alloc = std::allocator<char>]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::vector<char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::vector<char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const char*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = char]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::vector<char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::vector<char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const char*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::vector<char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::vector<char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const char*; std::vector<_Tp, _Alloc>::value_type = char]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from std/stl_vector.cpp:60:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::vector<char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::vector<char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const char*; std::vector<_Tp, _Alloc>::value_type = char]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector.cpp:141:114: error: no matches converting function ‘resize’ to type ‘void (class std::vector<char>::*)(long unsigned int, char)’
   cl.def("resize", (void (std::vector<char>::*)(unsigned long, char)) &std::vector<char, std::allocator<char> >::resize, "C++: std::vector<char, std::allocator<char> >::resize(unsigned long, char) --> void", pybind11::arg("__new_size"), pybind11::arg("__x"));
                                                                                                                  ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector.cpp:60:
/usr/include/c++/7/bits/stl_vector.h:709:7: note: candidates are: void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = char]
       resize(size_type __new_size, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:689:7: note:                 void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]
       resize(size_type __new_size)
       ^~~~~~
std/stl_vector.cpp:152:299: error: no matches converting function ‘insert’ to type ‘class __gnu_cxx::__normal_iterator<char*, std::vector<char> > (class std::vector<char>::*)(class __gnu_cxx::__normal_iterator<char*, std::vector<char> >, const char&)’
   cl.def("insert", (class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > (std::vector<char>::*)(class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >, const char &)) &std::vector<char, std::allocator<char> >::insert, "C++: std::vector<char, std::allocator<char> >::insert(class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >, const char &) --> class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >", pybind11::arg("__position"), pybind11::arg("__x"));
                                                                                                                                                                                                                                                                                                           ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector.cpp:60:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = char; _Alloc = std::allocator<char>]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::vector<char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::vector<char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const char*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = char]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::vector<char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::vector<char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const char*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::vector<char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::vector<char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const char*; std::vector<_Tp, _Alloc>::value_type = char]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from std/stl_vector.cpp:60:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::vector<char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::vector<char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const char*; std::vector<_Tp, _Alloc>::value_type = char]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector.cpp:153:221: error: no matches converting function ‘insert’ to type ‘void (class std::vector<char>::*)(class __gnu_cxx::__normal_iterator<char*, std::vector<char> >, long unsigned int, const char&)’
   cl.def("insert", (void (std::vector<char>::*)(class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >, unsigned long, const char &)) &std::vector<char, std::allocator<char> >::insert, "C++: std::vector<char, std::allocator<char> >::insert(class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >, unsigned long, const char &) --> void", pybind11::arg("__position"), pybind11::arg("__n"), pybind11::arg("__x"));
                                                                                                                                                                                                                             ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector.cpp:60:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = char; _Alloc = std::allocator<char>]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::vector<char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::vector<char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const char*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = char]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::vector<char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::vector<char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const char*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::vector<char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::vector<char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const char*; std::vector<_Tp, _Alloc>::value_type = char]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from std/stl_vector.cpp:60:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::vector<char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::vector<char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const char*; std::vector<_Tp, _Alloc>::value_type = char]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector.cpp:154:284: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<char*, std::vector<char> > (class std::vector<char>::*)(class __gnu_cxx::__normal_iterator<char*, std::vector<char> >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > (std::vector<char>::*)(class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >)) &std::vector<char, std::allocator<char> >::erase, "C++: std::vector<char, std::allocator<char> >::erase(class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >) --> class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >", pybind11::arg("__position"));
                                                                                                                                                                                                                                                                                            ^~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector.cpp:60:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::vector<char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::vector<char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const char*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::vector<char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::vector<char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const char*]
       erase(const_iterator __position)
       ^~~~~
std/stl_vector.cpp:155:383: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<char*, std::vector<char> > (class std::vector<char>::*)(class __gnu_cxx::__normal_iterator<char*, std::vector<char> >, class __gnu_cxx::__normal_iterator<char*, std::vector<char> >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > (std::vector<char>::*)(class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >, class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >)) &std::vector<char, std::allocator<char> >::erase, "C++: std::vector<char, std::allocator<char> >::erase(class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >, class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >) --> class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >", pybind11::arg("__first"), pybind11::arg("__last"));
                                                                                                                                                                                                                                                                                                                                                                                               ^~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector.cpp:60:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::vector<char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::vector<char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const char*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = char; _Alloc = std::allocator<char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::vector<char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::vector<char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const char*]
       erase(const_iterator __position)
       ^~~~~
std/stl_vector.cpp:180:110: error: no matches converting function ‘resize’ to type ‘void (class std::vector<int>::*)(long unsigned int, int)’
   cl.def("resize", (void (std::vector<int>::*)(unsigned long, int)) &std::vector<int, std::allocator<int> >::resize, "C++: std::vector<int, std::allocator<int> >::resize(unsigned long, int) --> void", pybind11::arg("__new_size"), pybind11::arg("__x"));
                                                                                                              ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector.cpp:60:
/usr/include/c++/7/bits/stl_vector.h:709:7: note: candidates are: void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int]
       resize(size_type __new_size, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:689:7: note:                 void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]
       resize(size_type __new_size)
       ^~~~~~
std/stl_vector.cpp:191:289: error: no matches converting function ‘insert’ to type ‘class __gnu_cxx::__normal_iterator<int*, std::vector<int> > (class std::vector<int>::*)(class __gnu_cxx::__normal_iterator<int*, std::vector<int> >, const int&)’
   cl.def("insert", (class __gnu_cxx::__normal_iterator<int *, class std::vector<int, class std::allocator<int> > > (std::vector<int>::*)(class __gnu_cxx::__normal_iterator<int *, class std::vector<int, class std::allocator<int> > >, const int &)) &std::vector<int, std::allocator<int> >::insert, "C++: std::vector<int, std::allocator<int> >::insert(class __gnu_cxx::__normal_iterator<int *, class std::vector<int, class std::allocator<int> > >, const int &) --> class __gnu_cxx::__normal_iterator<int *, class std::vector<int, class std::allocator<int> > >", pybind11::arg("__position"), pybind11::arg("__x"));
                                                                                                                                                                                                                                                                                                 ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector.cpp:60:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = int; _Alloc = std::allocator<int>]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const int*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const int*; std::vector<_Tp, _Alloc>::value_type = int]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from std/stl_vector.cpp:60:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const int*; std::vector<_Tp, _Alloc>::value_type = int]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector.cpp:192:214: error: no matches converting function ‘insert’ to type ‘void (class std::vector<int>::*)(class __gnu_cxx::__normal_iterator<int*, std::vector<int> >, long unsigned int, const int&)’
   cl.def("insert", (void (std::vector<int>::*)(class __gnu_cxx::__normal_iterator<int *, class std::vector<int, class std::allocator<int> > >, unsigned long, const int &)) &std::vector<int, std::allocator<int> >::insert, "C++: std::vector<int, std::allocator<int> >::insert(class __gnu_cxx::__normal_iterator<int *, class std::vector<int, class std::allocator<int> > >, unsigned long, const int &) --> void", pybind11::arg("__position"), pybind11::arg("__n"), pybind11::arg("__x"));
                                                                                                                                                                                                                      ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector.cpp:60:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = int; _Alloc = std::allocator<int>]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const int*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const int*; std::vector<_Tp, _Alloc>::value_type = int]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from std/stl_vector.cpp:60:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const int*; std::vector<_Tp, _Alloc>::value_type = int]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector.cpp:193:275: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<int*, std::vector<int> > (class std::vector<int>::*)(class __gnu_cxx::__normal_iterator<int*, std::vector<int> >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<int *, class std::vector<int, class std::allocator<int> > > (std::vector<int>::*)(class __gnu_cxx::__normal_iterator<int *, class std::vector<int, class std::allocator<int> > >)) &std::vector<int, std::allocator<int> >::erase, "C++: std::vector<int, std::allocator<int> >::erase(class __gnu_cxx::__normal_iterator<int *, class std::vector<int, class std::allocator<int> > >) --> class __gnu_cxx::__normal_iterator<int *, class std::vector<int, class std::allocator<int> > >", pybind11::arg("__position"));
                                                                                                                                                                                                                                                                                   ^~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector.cpp:60:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const int*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const int*]
       erase(const_iterator __position)
       ^~~~~
std/stl_vector.cpp:194:371: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<int*, std::vector<int> > (class std::vector<int>::*)(class __gnu_cxx::__normal_iterator<int*, std::vector<int> >, class __gnu_cxx::__normal_iterator<int*, std::vector<int> >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<int *, class std::vector<int, class std::allocator<int> > > (std::vector<int>::*)(class __gnu_cxx::__normal_iterator<int *, class std::vector<int, class std::allocator<int> > >, class __gnu_cxx::__normal_iterator<int *, class std::vector<int, class std::allocator<int> > >)) &std::vector<int, std::allocator<int> >::erase, "C++: std::vector<int, std::allocator<int> >::erase(class __gnu_cxx::__normal_iterator<int *, class std::vector<int, class std::allocator<int> > >, class __gnu_cxx::__normal_iterator<int *, class std::vector<int, class std::allocator<int> > >) --> class __gnu_cxx::__normal_iterator<int *, class std::vector<int, class std::allocator<int> > >", pybind11::arg("__first"), pybind11::arg("__last"));
                                                                                                                                                                                                                                                                                                                                                                                   ^~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector.cpp:60:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const int*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const int*]
       erase(const_iterator __position)
       ^~~~~
[4/26] Building CXX object CMakeFiles/mmtf.dir/std/stl_vector_1.o
FAILED: CMakeFiles/mmtf.dir/std/stl_vector_1.o 
/usr/bin/c++  -DNDEBUG -Dmmtf_EXPORTS -I/home/danpf/git/binder/source -I../include -I/home/danpf/git/binder/build/pybind11/include -I/home/danpf/miniconda3/envs/py3/include/python3.6m -I../msgpack-c/include -fPIC -MD -MT CMakeFiles/mmtf.dir/std/stl_vector_1.o -MF CMakeFiles/mmtf.dir/std/stl_vector_1.o.d -o CMakeFiles/mmtf.dir/std/stl_vector_1.o -c std/stl_vector_1.cpp
std/stl_vector_1.cpp: In function ‘void bind_std_stl_vector_1(std::function<pybind11::module&(const std::__cxx11::basic_string<char>&)>&)’:
std/stl_vector_1.cpp:162:172: error: no matches converting function ‘resize’ to type ‘void (class std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::*)(long unsigned int, std::__cxx11::string) {aka void (class std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::*)(long unsigned int, class std::__cxx11::basic_string<char>)}’
   cl.def("resize", (void (std::vector<std::string,std::allocator<std::string >>::*)(unsigned long, std::string)) &std::vector<std::string, std::allocator<std::string > >::resize, "C++: std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::resize(unsigned long, class std::__cxx11::basic_string<char>) --> void", pybind11::arg("__new_size"), pybind11::arg("__x"));
                                                                                                                                                                            ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector_1.cpp:83:
/usr/include/c++/7/bits/stl_vector.h:709:7: note: candidates are: void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::basic_string<char>]
       resize(size_type __new_size, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:689:7: note:                 void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int]
       resize(size_type __new_size)
       ^~~~~~
std/stl_vector_1.cpp:173:401: error: no matches converting function ‘insert’ to type ‘class __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > (class std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::*)(class __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, const string&) {aka class __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > (class std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::*)(class __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, const class std::__cxx11::basic_string<char>&)}’
   cl.def("insert", (class __gnu_cxx::__normal_iterator<std::string *, class std::vector<std::string, class std::allocator<std::string > > > (std::vector<std::string,std::allocator<std::string >>::*)(class __gnu_cxx::__normal_iterator<std::string *, class std::vector<std::string, class std::allocator<std::string > > >, const std::string &)) &std::vector<std::string, std::allocator<std::string > >::insert, "C++: std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::insert(class __gnu_cxx::__normal_iterator<class std::__cxx11::basic_string<char> *, class std::vector<class std::__cxx11::basic_string<char>, class std::allocator<class std::__cxx11::basic_string<char> > > >, const class std::__cxx11::basic_string<char> &) --> class __gnu_cxx::__normal_iterator<std::string *, class std::vector<std::string, class std::allocator<std::string > > >", pybind11::arg("__position"), pybind11::arg("__x"));
                                                                                                                                                                                                                                                                                                                                                                                                                 ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector_1.cpp:83:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::basic_string<char>]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::__cxx11::basic_string<char>*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::basic_string<char>]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from std/stl_vector_1.cpp:83:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::basic_string<char>]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector_1.cpp:174:301: error: no matches converting function ‘insert’ to type ‘void (class std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::*)(class __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, long unsigned int, const string&) {aka void (class std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::*)(class __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, long unsigned int, const class std::__cxx11::basic_string<char>&)}’
   cl.def("insert", (void (std::vector<std::string,std::allocator<std::string >>::*)(class __gnu_cxx::__normal_iterator<std::string *, class std::vector<std::string, class std::allocator<std::string > > >, unsigned long, const std::string &)) &std::vector<std::string, std::allocator<std::string > >::insert, "C++: std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::insert(class __gnu_cxx::__normal_iterator<class std::__cxx11::basic_string<char> *, class std::vector<class std::__cxx11::basic_string<char>, class std::allocator<class std::__cxx11::basic_string<char> > > >, unsigned long, const class std::__cxx11::basic_string<char> &) --> void", pybind11::arg("__position"), pybind11::arg("__n"), pybind11::arg("__x"));
                                                                                                                                                                                                                                                                                                             ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector_1.cpp:83:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::basic_string<char>]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::__cxx11::basic_string<char>*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::basic_string<char>]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from std/stl_vector_1.cpp:83:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::basic_string<char>]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector_1.cpp:175:379: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > (class std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::*)(class __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<std::string *, class std::vector<std::string, class std::allocator<std::string > > > (std::vector<std::string,std::allocator<std::string >>::*)(class __gnu_cxx::__normal_iterator<std::string *, class std::vector<std::string, class std::allocator<std::string > > >)) &std::vector<std::string, std::allocator<std::string > >::erase, "C++: std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::erase(class __gnu_cxx::__normal_iterator<class std::__cxx11::basic_string<char> *, class std::vector<class std::__cxx11::basic_string<char>, class std::allocator<class std::__cxx11::basic_string<char> > > >) --> class __gnu_cxx::__normal_iterator<std::string *, class std::vector<std::string, class std::allocator<std::string > > >", pybind11::arg("__position"));
                                                                                                                                                                                                                                                                                                                                                                                           ^~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector_1.cpp:83:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::__cxx11::basic_string<char>*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::__cxx11::basic_string<char>*]
       erase(const_iterator __position)
       ^~~~~
std/stl_vector_1.cpp:176:500: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > (class std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::*)(class __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, class __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<std::string *, class std::vector<std::string, class std::allocator<std::string > > > (std::vector<std::string,std::allocator<std::string >>::*)(class __gnu_cxx::__normal_iterator<std::string *, class std::vector<std::string, class std::allocator<std::string > > >, class __gnu_cxx::__normal_iterator<std::string *, class std::vector<std::string, class std::allocator<std::string > > >)) &std::vector<std::string, std::allocator<std::string > >::erase, "C++: std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::erase(class __gnu_cxx::__normal_iterator<class std::__cxx11::basic_string<char> *, class std::vector<class std::__cxx11::basic_string<char>, class std::allocator<class std::__cxx11::basic_string<char> > > >, class __gnu_cxx::__normal_iterator<class std::__cxx11::basic_string<char> *, class std::vector<class std::__cxx11::basic_string<char>, class std::allocator<class std::__cxx11::basic_string<char> > > >) --> class __gnu_cxx::__normal_iterator<std::string *, class std::vector<std::string, class std::allocator<std::string > > >", pybind11::arg("__first"), pybind11::arg("__last"));
~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector_1.cpp:83:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::__cxx11::basic_string<char>*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const std::__cxx11::basic_string<char>*]
       erase(const_iterator __position)
       ^~~~~
std/stl_vector_1.cpp:201:142: error: no matches converting function ‘resize’ to type ‘void (class std::vector<signed char>::*)(long unsigned int, signed char)’
   cl.def("resize", (void (std::vector<signed char>::*)(unsigned long, signed char)) &std::vector<signed char, std::allocator<signed char> >::resize, "C++: std::vector<signed char, std::allocator<signed char> >::resize(unsigned long, signed char) --> void", pybind11::arg("__new_size"), pybind11::arg("__x"));
                                                                                                                                              ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector_1.cpp:83:
/usr/include/c++/7/bits/stl_vector.h:709:7: note: candidates are: void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = signed char; _Alloc = std::allocator<signed char>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = signed char]
       resize(size_type __new_size, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:689:7: note:                 void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type) [with _Tp = signed char; _Alloc = std::allocator<signed char>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]
       resize(size_type __new_size)
       ^~~~~~
std/stl_vector_1.cpp:212:369: error: no matches converting function ‘insert’ to type ‘class __gnu_cxx::__normal_iterator<signed char*, std::vector<signed char> > (class std::vector<signed char>::*)(class __gnu_cxx::__normal_iterator<signed char*, std::vector<signed char> >, const signed char&)’
   cl.def("insert", (class __gnu_cxx::__normal_iterator<signed char *, class std::vector<signed char, class std::allocator<signed char> > > (std::vector<signed char>::*)(class __gnu_cxx::__normal_iterator<signed char *, class std::vector<signed char, class std::allocator<signed char> > >, const signed char &)) &std::vector<signed char, std::allocator<signed char> >::insert, "C++: std::vector<signed char, std::allocator<signed char> >::insert(class __gnu_cxx::__normal_iterator<signed char *, class std::vector<signed char, class std::allocator<signed char> > >, const signed char &) --> class __gnu_cxx::__normal_iterator<signed char *, class std::vector<signed char, class std::allocator<signed char> > >", pybind11::arg("__position"), pybind11::arg("__x"));
                                                                                                                                                                                                                                                                                                                                                                                 ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector_1.cpp:83:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = signed char; _Alloc = std::allocator<signed char>]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = signed char; _Alloc = std::allocator<signed char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<signed char*, std::vector<signed char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = signed char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const signed char*, std::vector<signed char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const signed char*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = signed char]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = signed char; _Alloc = std::allocator<signed char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<signed char*, std::vector<signed char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = signed char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const signed char*, std::vector<signed char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const signed char*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = signed char; _Alloc = std::allocator<signed char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<signed char*, std::vector<signed char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = signed char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const signed char*, std::vector<signed char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const signed char*; std::vector<_Tp, _Alloc>::value_type = signed char]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from std/stl_vector_1.cpp:83:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = signed char; _Alloc = std::allocator<signed char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<signed char*, std::vector<signed char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = signed char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const signed char*, std::vector<signed char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const signed char*; std::vector<_Tp, _Alloc>::value_type = signed char]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector_1.cpp:213:270: error: no matches converting function ‘insert’ to type ‘void (class std::vector<signed char>::*)(class __gnu_cxx::__normal_iterator<signed char*, std::vector<signed char> >, long unsigned int, const signed char&)’
   cl.def("insert", (void (std::vector<signed char>::*)(class __gnu_cxx::__normal_iterator<signed char *, class std::vector<signed char, class std::allocator<signed char> > >, unsigned long, const signed char &)) &std::vector<signed char, std::allocator<signed char> >::insert, "C++: std::vector<signed char, std::allocator<signed char> >::insert(class __gnu_cxx::__normal_iterator<signed char *, class std::vector<signed char, class std::allocator<signed char> > >, unsigned long, const signed char &) --> void", pybind11::arg("__position"), pybind11::arg("__n"), pybind11::arg("__x"));
                                                                                                                                                                                                                                                                              ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector_1.cpp:83:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = signed char; _Alloc = std::allocator<signed char>]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = signed char; _Alloc = std::allocator<signed char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<signed char*, std::vector<signed char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = signed char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const signed char*, std::vector<signed char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const signed char*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = signed char]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = signed char; _Alloc = std::allocator<signed char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<signed char*, std::vector<signed char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = signed char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const signed char*, std::vector<signed char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const signed char*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = signed char; _Alloc = std::allocator<signed char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<signed char*, std::vector<signed char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = signed char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const signed char*, std::vector<signed char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const signed char*; std::vector<_Tp, _Alloc>::value_type = signed char]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from std/stl_vector_1.cpp:83:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = signed char; _Alloc = std::allocator<signed char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<signed char*, std::vector<signed char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = signed char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const signed char*, std::vector<signed char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const signed char*; std::vector<_Tp, _Alloc>::value_type = signed char]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector_1.cpp:214:347: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<signed char*, std::vector<signed char> > (class std::vector<signed char>::*)(class __gnu_cxx::__normal_iterator<signed char*, std::vector<signed char> >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<signed char *, class std::vector<signed char, class std::allocator<signed char> > > (std::vector<signed char>::*)(class __gnu_cxx::__normal_iterator<signed char *, class std::vector<signed char, class std::allocator<signed char> > >)) &std::vector<signed char, std::allocator<signed char> >::erase, "C++: std::vector<signed char, std::allocator<signed char> >::erase(class __gnu_cxx::__normal_iterator<signed char *, class std::vector<signed char, class std::allocator<signed char> > >) --> class __gnu_cxx::__normal_iterator<signed char *, class std::vector<signed char, class std::allocator<signed char> > >", pybind11::arg("__position"));
                                                                                                                                                                                                                                                                                                                                                           ^~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector_1.cpp:83:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = signed char; _Alloc = std::allocator<signed char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<signed char*, std::vector<signed char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = signed char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const signed char*, std::vector<signed char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const signed char*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = signed char; _Alloc = std::allocator<signed char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<signed char*, std::vector<signed char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = signed char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const signed char*, std::vector<signed char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const signed char*]
       erase(const_iterator __position)
       ^~~~~
std/stl_vector_1.cpp:215:467: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<signed char*, std::vector<signed char> > (class std::vector<signed char>::*)(class __gnu_cxx::__normal_iterator<signed char*, std::vector<signed char> >, class __gnu_cxx::__normal_iterator<signed char*, std::vector<signed char> >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<signed char *, class std::vector<signed char, class std::allocator<signed char> > > (std::vector<signed char>::*)(class __gnu_cxx::__normal_iterator<signed char *, class std::vector<signed char, class std::allocator<signed char> > >, class __gnu_cxx::__normal_iterator<signed char *, class std::vector<signed char, class std::allocator<signed char> > >)) &std::vector<signed char, std::allocator<signed char> >::erase, "C++: std::vector<signed char, std::allocator<signed char> >::erase(class __gnu_cxx::__normal_iterator<signed char *, class std::vector<signed char, class std::allocator<signed char> > >, class __gnu_cxx::__normal_iterator<signed char *, class std::vector<signed char, class std::allocator<signed char> > >) --> class __gnu_cxx::__normal_iterator<signed char *, class std::vector<signed char, class std::allocator<signed char> > >", pybind11::arg("__first"), pybind11::arg("__last"));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ^~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from std/stl_vector_1.cpp:83:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = signed char; _Alloc = std::allocator<signed char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<signed char*, std::vector<signed char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = signed char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const signed char*, std::vector<signed char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const signed char*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = signed char; _Alloc = std::allocator<signed char>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<signed char*, std::vector<signed char> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = signed char*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const signed char*, std::vector<signed char> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const signed char*]
       erase(const_iterator __position)
       ^~~~~
[5/26] Building CXX object CMakeFiles/mmtf.dir/std/stdexcept.o
[6/26] Building CXX object CMakeFiles/mmtf.dir/std/exception.o
[7/26] Building CXX object CMakeFiles/mmtf.dir/std/stl_vector_4.o
FAILED: CMakeFiles/mmtf.dir/std/stl_vector_4.o 
/usr/bin/c++  -DNDEBUG -Dmmtf_EXPORTS -I/home/danpf/git/binder/source -I../include -I/home/danpf/git/binder/build/pybind11/include -I/home/danpf/miniconda3/envs/py3/include/python3.6m -I../msgpack-c/include -fPIC -MD -MT CMakeFiles/mmtf.dir/std/stl_vector_4.o -MF CMakeFiles/mmtf.dir/std/stl_vector_4.o.d -o CMakeFiles/mmtf.dir/std/stl_vector_4.o -c std/stl_vector_4.cpp
std/stl_vector_4.cpp: In function ‘void bind_std_stl_vector_4(std::function<pybind11::module&(const std::__cxx11::basic_string<char>&)>&)’:
std/stl_vector_4.cpp:134:173: error: no matches converting function ‘resize’ to type ‘void (class std::vector<mmtf::BioAssembly>::*)(long unsigned int, struct mmtf::BioAssembly)’
   cl.def("resize", (void (std::vector<mmtf::BioAssembly>::*)(unsigned long, struct mmtf::BioAssembly)) &std::vector<mmtf::BioAssembly, std::allocator<mmtf::BioAssembly> >::resize, "C++: std::vector<mmtf::BioAssembly, std::allocator<mmtf::BioAssembly> >::resize(unsigned long, struct mmtf::BioAssembly) --> void", pybind11::arg("__new_size"), pybind11::arg("__x"));
                                                                                                                                                                             ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_4.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:709:7: note: candidates are: void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = mmtf::BioAssembly; _Alloc = std::allocator<mmtf::BioAssembly>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = mmtf::BioAssembly]
       resize(size_type __new_size, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:689:7: note:                 void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type) [with _Tp = mmtf::BioAssembly; _Alloc = std::allocator<mmtf::BioAssembly>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]
       resize(size_type __new_size)
       ^~~~~~
std/stl_vector_4.cpp:145:478: error: no matches converting function ‘insert’ to type ‘class __gnu_cxx::__normal_iterator<mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> > (class std::vector<mmtf::BioAssembly>::*)(class __gnu_cxx::__normal_iterator<mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >, const struct mmtf::BioAssembly&)’
   cl.def("insert", (class __gnu_cxx::__normal_iterator<struct mmtf::BioAssembly *, class std::vector<struct mmtf::BioAssembly, class std::allocator<struct mmtf::BioAssembly> > > (std::vector<mmtf::BioAssembly>::*)(class __gnu_cxx::__normal_iterator<struct mmtf::BioAssembly *, class std::vector<struct mmtf::BioAssembly, class std::allocator<struct mmtf::BioAssembly> > >, const struct mmtf::BioAssembly &)) &std::vector<mmtf::BioAssembly, std::allocator<mmtf::BioAssembly> >::insert, "C++: std::vector<mmtf::BioAssembly, std::allocator<mmtf::BioAssembly> >::insert(class __gnu_cxx::__normal_iterator<struct mmtf::BioAssembly *, class std::vector<struct mmtf::BioAssembly, class std::allocator<struct mmtf::BioAssembly> > >, const struct mmtf::BioAssembly &) --> class __gnu_cxx::__normal_iterator<struct mmtf::BioAssembly *, class std::vector<struct mmtf::BioAssembly, class std::allocator<struct mmtf::BioAssembly> > >", pybind11::arg("__position"), pybind11::arg("__x"));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_4.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = mmtf::BioAssembly; _Alloc = std::allocator<mmtf::BioAssembly>]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = mmtf::BioAssembly; _Alloc = std::allocator<mmtf::BioAssembly>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::BioAssembly*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::BioAssembly*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = mmtf::BioAssembly]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = mmtf::BioAssembly; _Alloc = std::allocator<mmtf::BioAssembly>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::BioAssembly*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::BioAssembly*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = mmtf::BioAssembly; _Alloc = std::allocator<mmtf::BioAssembly>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::BioAssembly*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::BioAssembly*; std::vector<_Tp, _Alloc>::value_type = mmtf::BioAssembly]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_4.cpp:46:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = mmtf::BioAssembly; _Alloc = std::allocator<mmtf::BioAssembly>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::BioAssembly*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::BioAssembly*; std::vector<_Tp, _Alloc>::value_type = mmtf::BioAssembly]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector_4.cpp:146:340: error: no matches converting function ‘insert’ to type ‘void (class std::vector<mmtf::BioAssembly>::*)(class __gnu_cxx::__normal_iterator<mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >, long unsigned int, const struct mmtf::BioAssembly&)’
   cl.def("insert", (void (std::vector<mmtf::BioAssembly>::*)(class __gnu_cxx::__normal_iterator<struct mmtf::BioAssembly *, class std::vector<struct mmtf::BioAssembly, class std::allocator<struct mmtf::BioAssembly> > >, unsigned long, const struct mmtf::BioAssembly &)) &std::vector<mmtf::BioAssembly, std::allocator<mmtf::BioAssembly> >::insert, "C++: std::vector<mmtf::BioAssembly, std::allocator<mmtf::BioAssembly> >::insert(class __gnu_cxx::__normal_iterator<struct mmtf::BioAssembly *, class std::vector<struct mmtf::BioAssembly, class std::allocator<struct mmtf::BioAssembly> > >, unsigned long, const struct mmtf::BioAssembly &) --> void", pybind11::arg("__position"), pybind11::arg("__n"), pybind11::arg("__x"));
                                                                                                                                                                                                                                                                                                                                                    ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_4.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = mmtf::BioAssembly; _Alloc = std::allocator<mmtf::BioAssembly>]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = mmtf::BioAssembly; _Alloc = std::allocator<mmtf::BioAssembly>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::BioAssembly*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::BioAssembly*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = mmtf::BioAssembly]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = mmtf::BioAssembly; _Alloc = std::allocator<mmtf::BioAssembly>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::BioAssembly*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::BioAssembly*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = mmtf::BioAssembly; _Alloc = std::allocator<mmtf::BioAssembly>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::BioAssembly*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::BioAssembly*; std::vector<_Tp, _Alloc>::value_type = mmtf::BioAssembly]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_4.cpp:46:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = mmtf::BioAssembly; _Alloc = std::allocator<mmtf::BioAssembly>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::BioAssembly*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::BioAssembly*; std::vector<_Tp, _Alloc>::value_type = mmtf::BioAssembly]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector_4.cpp:147:443: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> > (class std::vector<mmtf::BioAssembly>::*)(class __gnu_cxx::__normal_iterator<mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<struct mmtf::BioAssembly *, class std::vector<struct mmtf::BioAssembly, class std::allocator<struct mmtf::BioAssembly> > > (std::vector<mmtf::BioAssembly>::*)(class __gnu_cxx::__normal_iterator<struct mmtf::BioAssembly *, class std::vector<struct mmtf::BioAssembly, class std::allocator<struct mmtf::BioAssembly> > >)) &std::vector<mmtf::BioAssembly, std::allocator<mmtf::BioAssembly> >::erase, "C++: std::vector<mmtf::BioAssembly, std::allocator<mmtf::BioAssembly> >::erase(class __gnu_cxx::__normal_iterator<struct mmtf::BioAssembly *, class std::vector<struct mmtf::BioAssembly, class std::allocator<struct mmtf::BioAssembly> > >) --> class __gnu_cxx::__normal_iterator<struct mmtf::BioAssembly *, class std::vector<struct mmtf::BioAssembly, class std::allocator<struct mmtf::BioAssembly> > >", pybind11::arg("__position"));
                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_4.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = mmtf::BioAssembly; _Alloc = std::allocator<mmtf::BioAssembly>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::BioAssembly*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::BioAssembly*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = mmtf::BioAssembly; _Alloc = std::allocator<mmtf::BioAssembly>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::BioAssembly*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::BioAssembly*]
       erase(const_iterator __position)
       ^~~~~
std/stl_vector_4.cpp:148:602: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> > (class std::vector<mmtf::BioAssembly>::*)(class __gnu_cxx::__normal_iterator<mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >, class __gnu_cxx::__normal_iterator<mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<struct mmtf::BioAssembly *, class std::vector<struct mmtf::BioAssembly, class std::allocator<struct mmtf::BioAssembly> > > (std::vector<mmtf::BioAssembly>::*)(class __gnu_cxx::__normal_iterator<struct mmtf::BioAssembly *, class std::vector<struct mmtf::BioAssembly, class std::allocator<struct mmtf::BioAssembly> > >, class __gnu_cxx::__normal_iterator<struct mmtf::BioAssembly *, class std::vector<struct mmtf::BioAssembly, class std::allocator<struct mmtf::BioAssembly> > >)) &std::vector<mmtf::BioAssembly, std::allocator<mmtf::BioAssembly> >::erase, "C++: std::vector<mmtf::BioAssembly, std::allocator<mmtf::BioAssembly> >::erase(class __gnu_cxx::__normal_iterator<struct mmtf::BioAssembly *, class std::vector<struct mmtf::BioAssembly, class std::allocator<struct mmtf::BioAssembly> > >, class __gnu_cxx::__normal_iterator<struct mmtf::BioAssembly *, class std::vector<struct mmtf::BioAssembly, class std::allocator<struct mmtf::BioAssembly> > >) --> class __gnu_cxx::__normal_iterator<struct mmtf::BioAssembly *, class std::vector<struct mmtf::BioAssembly, class std::allocator<struct mmtf::BioAssembly> > >", pybind11::arg("__first"), pybind11::arg("__last"));
~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_4.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = mmtf::BioAssembly; _Alloc = std::allocator<mmtf::BioAssembly>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::BioAssembly*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::BioAssembly*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = mmtf::BioAssembly; _Alloc = std::allocator<mmtf::BioAssembly>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::BioAssembly*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::BioAssembly*, std::vector<mmtf::BioAssembly> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::BioAssembly*]
       erase(const_iterator __position)
       ^~~~~
std/stl_vector_4.cpp:173:153: error: no matches converting function ‘resize’ to type ‘void (class std::vector<mmtf::Entity>::*)(long unsigned int, struct mmtf::Entity)’
   cl.def("resize", (void (std::vector<mmtf::Entity>::*)(unsigned long, struct mmtf::Entity)) &std::vector<mmtf::Entity, std::allocator<mmtf::Entity> >::resize, "C++: std::vector<mmtf::Entity, std::allocator<mmtf::Entity> >::resize(unsigned long, struct mmtf::Entity) --> void", pybind11::arg("__new_size"), pybind11::arg("__x"));
                                                                                                                                                         ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_4.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:709:7: note: candidates are: void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = mmtf::Entity; _Alloc = std::allocator<mmtf::Entity>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = mmtf::Entity]
       resize(size_type __new_size, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:689:7: note:                 void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type) [with _Tp = mmtf::Entity; _Alloc = std::allocator<mmtf::Entity>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]
       resize(size_type __new_size)
       ^~~~~~
std/stl_vector_4.cpp:184:428: error: no matches converting function ‘insert’ to type ‘class __gnu_cxx::__normal_iterator<mmtf::Entity*, std::vector<mmtf::Entity> > (class std::vector<mmtf::Entity>::*)(class __gnu_cxx::__normal_iterator<mmtf::Entity*, std::vector<mmtf::Entity> >, const struct mmtf::Entity&)’
   cl.def("insert", (class __gnu_cxx::__normal_iterator<struct mmtf::Entity *, class std::vector<struct mmtf::Entity, class std::allocator<struct mmtf::Entity> > > (std::vector<mmtf::Entity>::*)(class __gnu_cxx::__normal_iterator<struct mmtf::Entity *, class std::vector<struct mmtf::Entity, class std::allocator<struct mmtf::Entity> > >, const struct mmtf::Entity &)) &std::vector<mmtf::Entity, std::allocator<mmtf::Entity> >::insert, "C++: std::vector<mmtf::Entity, std::allocator<mmtf::Entity> >::insert(class __gnu_cxx::__normal_iterator<struct mmtf::Entity *, class std::vector<struct mmtf::Entity, class std::allocator<struct mmtf::Entity> > >, const struct mmtf::Entity &) --> class __gnu_cxx::__normal_iterator<struct mmtf::Entity *, class std::vector<struct mmtf::Entity, class std::allocator<struct mmtf::Entity> > >", pybind11::arg("__position"), pybind11::arg("__x"));
                                                                                                                                                                                                                                                                                                                                                                                                                                            ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_4.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = mmtf::Entity; _Alloc = std::allocator<mmtf::Entity>]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = mmtf::Entity; _Alloc = std::allocator<mmtf::Entity>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Entity*, std::vector<mmtf::Entity> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Entity*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Entity*, std::vector<mmtf::Entity> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Entity*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = mmtf::Entity]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = mmtf::Entity; _Alloc = std::allocator<mmtf::Entity>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Entity*, std::vector<mmtf::Entity> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Entity*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Entity*, std::vector<mmtf::Entity> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Entity*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = mmtf::Entity; _Alloc = std::allocator<mmtf::Entity>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Entity*, std::vector<mmtf::Entity> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Entity*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Entity*, std::vector<mmtf::Entity> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Entity*; std::vector<_Tp, _Alloc>::value_type = mmtf::Entity]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_4.cpp:46:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = mmtf::Entity; _Alloc = std::allocator<mmtf::Entity>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Entity*, std::vector<mmtf::Entity> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Entity*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Entity*, std::vector<mmtf::Entity> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Entity*; std::vector<_Tp, _Alloc>::value_type = mmtf::Entity]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector_4.cpp:185:305: error: no matches converting function ‘insert’ to type ‘void (class std::vector<mmtf::Entity>::*)(class __gnu_cxx::__normal_iterator<mmtf::Entity*, std::vector<mmtf::Entity> >, long unsigned int, const struct mmtf::Entity&)’
   cl.def("insert", (void (std::vector<mmtf::Entity>::*)(class __gnu_cxx::__normal_iterator<struct mmtf::Entity *, class std::vector<struct mmtf::Entity, class std::allocator<struct mmtf::Entity> > >, unsigned long, const struct mmtf::Entity &)) &std::vector<mmtf::Entity, std::allocator<mmtf::Entity> >::insert, "C++: std::vector<mmtf::Entity, std::allocator<mmtf::Entity> >::insert(class __gnu_cxx::__normal_iterator<struct mmtf::Entity *, class std::vector<struct mmtf::Entity, class std::allocator<struct mmtf::Entity> > >, unsigned long, const struct mmtf::Entity &) --> void", pybind11::arg("__position"), pybind11::arg("__n"), pybind11::arg("__x"));
                                                                                                                                                                                                                                                                                                                 ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_4.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = mmtf::Entity; _Alloc = std::allocator<mmtf::Entity>]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = mmtf::Entity; _Alloc = std::allocator<mmtf::Entity>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Entity*, std::vector<mmtf::Entity> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Entity*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Entity*, std::vector<mmtf::Entity> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Entity*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = mmtf::Entity]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = mmtf::Entity; _Alloc = std::allocator<mmtf::Entity>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Entity*, std::vector<mmtf::Entity> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Entity*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Entity*, std::vector<mmtf::Entity> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Entity*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = mmtf::Entity; _Alloc = std::allocator<mmtf::Entity>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Entity*, std::vector<mmtf::Entity> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Entity*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Entity*, std::vector<mmtf::Entity> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Entity*; std::vector<_Tp, _Alloc>::value_type = mmtf::Entity]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_4.cpp:46:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = mmtf::Entity; _Alloc = std::allocator<mmtf::Entity>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Entity*, std::vector<mmtf::Entity> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Entity*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Entity*, std::vector<mmtf::Entity> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Entity*; std::vector<_Tp, _Alloc>::value_type = mmtf::Entity]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector_4.cpp:186:398: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<mmtf::Entity*, std::vector<mmtf::Entity> > (class std::vector<mmtf::Entity>::*)(class __gnu_cxx::__normal_iterator<mmtf::Entity*, std::vector<mmtf::Entity> >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<struct mmtf::Entity *, class std::vector<struct mmtf::Entity, class std::allocator<struct mmtf::Entity> > > (std::vector<mmtf::Entity>::*)(class __gnu_cxx::__normal_iterator<struct mmtf::Entity *, class std::vector<struct mmtf::Entity, class std::allocator<struct mmtf::Entity> > >)) &std::vector<mmtf::Entity, std::allocator<mmtf::Entity> >::erase, "C++: std::vector<mmtf::Entity, std::allocator<mmtf::Entity> >::erase(class __gnu_cxx::__normal_iterator<struct mmtf::Entity *, class std::vector<struct mmtf::Entity, class std::allocator<struct mmtf::Entity> > >) --> class __gnu_cxx::__normal_iterator<struct mmtf::Entity *, class std::vector<struct mmtf::Entity, class std::allocator<struct mmtf::Entity> > >", pybind11::arg("__position"));
                                                                                                                                                                                                                                                                                                                                                                                                              ^~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_4.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = mmtf::Entity; _Alloc = std::allocator<mmtf::Entity>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Entity*, std::vector<mmtf::Entity> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Entity*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Entity*, std::vector<mmtf::Entity> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Entity*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = mmtf::Entity; _Alloc = std::allocator<mmtf::Entity>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Entity*, std::vector<mmtf::Entity> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Entity*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Entity*, std::vector<mmtf::Entity> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Entity*]
       erase(const_iterator __position)
       ^~~~~
std/stl_vector_4.cpp:187:542: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<mmtf::Entity*, std::vector<mmtf::Entity> > (class std::vector<mmtf::Entity>::*)(class __gnu_cxx::__normal_iterator<mmtf::Entity*, std::vector<mmtf::Entity> >, class __gnu_cxx::__normal_iterator<mmtf::Entity*, std::vector<mmtf::Entity> >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<struct mmtf::Entity *, class std::vector<struct mmtf::Entity, class std::allocator<struct mmtf::Entity> > > (std::vector<mmtf::Entity>::*)(class __gnu_cxx::__normal_iterator<struct mmtf::Entity *, class std::vector<struct mmtf::Entity, class std::allocator<struct mmtf::Entity> > >, class __gnu_cxx::__normal_iterator<struct mmtf::Entity *, class std::vector<struct mmtf::Entity, class std::allocator<struct mmtf::Entity> > >)) &std::vector<mmtf::Entity, std::allocator<mmtf::Entity> >::erase, "C++: std::vector<mmtf::Entity, std::allocator<mmtf::Entity> >::erase(class __gnu_cxx::__normal_iterator<struct mmtf::Entity *, class std::vector<struct mmtf::Entity, class std::allocator<struct mmtf::Entity> > >, class __gnu_cxx::__normal_iterator<struct mmtf::Entity *, class std::vector<struct mmtf::Entity, class std::allocator<struct mmtf::Entity> > >) --> class __gnu_cxx::__normal_iterator<struct mmtf::Entity *, class std::vector<struct mmtf::Entity, class std::allocator<struct mmtf::Entity> > >", pybind11::arg("__first"), pybind11::arg("__last"));
~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_4.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = mmtf::Entity; _Alloc = std::allocator<mmtf::Entity>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Entity*, std::vector<mmtf::Entity> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Entity*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Entity*, std::vector<mmtf::Entity> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Entity*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = mmtf::Entity; _Alloc = std::allocator<mmtf::Entity>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Entity*, std::vector<mmtf::Entity> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Entity*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Entity*, std::vector<mmtf::Entity> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Entity*]
       erase(const_iterator __position)
       ^~~~~
[8/26] Building CXX object CMakeFiles/mmtf.dir/std/stl_vector_2.o
FAILED: CMakeFiles/mmtf.dir/std/stl_vector_2.o 
/usr/bin/c++  -DNDEBUG -Dmmtf_EXPORTS -I/home/danpf/git/binder/source -I../include -I/home/danpf/git/binder/build/pybind11/include -I/home/danpf/miniconda3/envs/py3/include/python3.6m -I../msgpack-c/include -fPIC -MD -MT CMakeFiles/mmtf.dir/std/stl_vector_2.o -MF CMakeFiles/mmtf.dir/std/stl_vector_2.o.d -o CMakeFiles/mmtf.dir/std/stl_vector_2.o -c std/stl_vector_2.cpp
std/stl_vector_2.cpp: In function ‘void bind_std_stl_vector_2(std::function<pybind11::module&(const std::__cxx11::basic_string<char>&)>&)’:
std/stl_vector_2.cpp:130:165: error: no matches converting function ‘resize’ to type ‘void (class std::vector<mmtf::Transform>::*)(long unsigned int, struct mmtf::Transform)’
   cl.def("resize", (void (std::vector<mmtf::Transform>::*)(unsigned long, struct mmtf::Transform)) &std::vector<mmtf::Transform, std::allocator<mmtf::Transform> >::resize, "C++: std::vector<mmtf::Transform, std::allocator<mmtf::Transform> >::resize(unsigned long, struct mmtf::Transform) --> void", pybind11::arg("__new_size"), pybind11::arg("__x"));
                                                                                                                                                                     ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_2.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:709:7: note: candidates are: void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = mmtf::Transform; _Alloc = std::allocator<mmtf::Transform>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = mmtf::Transform]
       resize(size_type __new_size, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:689:7: note:                 void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type) [with _Tp = mmtf::Transform; _Alloc = std::allocator<mmtf::Transform>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]
       resize(size_type __new_size)
       ^~~~~~
std/stl_vector_2.cpp:141:458: error: no matches converting function ‘insert’ to type ‘class __gnu_cxx::__normal_iterator<mmtf::Transform*, std::vector<mmtf::Transform> > (class std::vector<mmtf::Transform>::*)(class __gnu_cxx::__normal_iterator<mmtf::Transform*, std::vector<mmtf::Transform> >, const struct mmtf::Transform&)’
   cl.def("insert", (class __gnu_cxx::__normal_iterator<struct mmtf::Transform *, class std::vector<struct mmtf::Transform, class std::allocator<struct mmtf::Transform> > > (std::vector<mmtf::Transform>::*)(class __gnu_cxx::__normal_iterator<struct mmtf::Transform *, class std::vector<struct mmtf::Transform, class std::allocator<struct mmtf::Transform> > >, const struct mmtf::Transform &)) &std::vector<mmtf::Transform, std::allocator<mmtf::Transform> >::insert, "C++: std::vector<mmtf::Transform, std::allocator<mmtf::Transform> >::insert(class __gnu_cxx::__normal_iterator<struct mmtf::Transform *, class std::vector<struct mmtf::Transform, class std::allocator<struct mmtf::Transform> > >, const struct mmtf::Transform &) --> class __gnu_cxx::__normal_iterator<struct mmtf::Transform *, class std::vector<struct mmtf::Transform, class std::allocator<struct mmtf::Transform> > >", pybind11::arg("__position"), pybind11::arg("__x"));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_2.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = mmtf::Transform; _Alloc = std::allocator<mmtf::Transform>]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = mmtf::Transform; _Alloc = std::allocator<mmtf::Transform>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Transform*, std::vector<mmtf::Transform> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Transform*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Transform*, std::vector<mmtf::Transform> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Transform*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = mmtf::Transform]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = mmtf::Transform; _Alloc = std::allocator<mmtf::Transform>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Transform*, std::vector<mmtf::Transform> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Transform*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Transform*, std::vector<mmtf::Transform> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Transform*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = mmtf::Transform; _Alloc = std::allocator<mmtf::Transform>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Transform*, std::vector<mmtf::Transform> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Transform*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Transform*, std::vector<mmtf::Transform> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Transform*; std::vector<_Tp, _Alloc>::value_type = mmtf::Transform]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_2.cpp:46:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = mmtf::Transform; _Alloc = std::allocator<mmtf::Transform>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Transform*, std::vector<mmtf::Transform> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Transform*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Transform*, std::vector<mmtf::Transform> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Transform*; std::vector<_Tp, _Alloc>::value_type = mmtf::Transform]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector_2.cpp:142:326: error: no matches converting function ‘insert’ to type ‘void (class std::vector<mmtf::Transform>::*)(class __gnu_cxx::__normal_iterator<mmtf::Transform*, std::vector<mmtf::Transform> >, long unsigned int, const struct mmtf::Transform&)’
   cl.def("insert", (void (std::vector<mmtf::Transform>::*)(class __gnu_cxx::__normal_iterator<struct mmtf::Transform *, class std::vector<struct mmtf::Transform, class std::allocator<struct mmtf::Transform> > >, unsigned long, const struct mmtf::Transform &)) &std::vector<mmtf::Transform, std::allocator<mmtf::Transform> >::insert, "C++: std::vector<mmtf::Transform, std::allocator<mmtf::Transform> >::insert(class __gnu_cxx::__normal_iterator<struct mmtf::Transform *, class std::vector<struct mmtf::Transform, class std::allocator<struct mmtf::Transform> > >, unsigned long, const struct mmtf::Transform &) --> void", pybind11::arg("__position"), pybind11::arg("__n"), pybind11::arg("__x"));
                                                                                                                                                                                                                                                                                                                                      ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_2.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = mmtf::Transform; _Alloc = std::allocator<mmtf::Transform>]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = mmtf::Transform; _Alloc = std::allocator<mmtf::Transform>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Transform*, std::vector<mmtf::Transform> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Transform*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Transform*, std::vector<mmtf::Transform> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Transform*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = mmtf::Transform]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = mmtf::Transform; _Alloc = std::allocator<mmtf::Transform>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Transform*, std::vector<mmtf::Transform> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Transform*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Transform*, std::vector<mmtf::Transform> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Transform*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = mmtf::Transform; _Alloc = std::allocator<mmtf::Transform>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Transform*, std::vector<mmtf::Transform> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Transform*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Transform*, std::vector<mmtf::Transform> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Transform*; std::vector<_Tp, _Alloc>::value_type = mmtf::Transform]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_2.cpp:46:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = mmtf::Transform; _Alloc = std::allocator<mmtf::Transform>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Transform*, std::vector<mmtf::Transform> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Transform*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Transform*, std::vector<mmtf::Transform> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Transform*; std::vector<_Tp, _Alloc>::value_type = mmtf::Transform]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector_2.cpp:143:425: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<mmtf::Transform*, std::vector<mmtf::Transform> > (class std::vector<mmtf::Transform>::*)(class __gnu_cxx::__normal_iterator<mmtf::Transform*, std::vector<mmtf::Transform> >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<struct mmtf::Transform *, class std::vector<struct mmtf::Transform, class std::allocator<struct mmtf::Transform> > > (std::vector<mmtf::Transform>::*)(class __gnu_cxx::__normal_iterator<struct mmtf::Transform *, class std::vector<struct mmtf::Transform, class std::allocator<struct mmtf::Transform> > >)) &std::vector<mmtf::Transform, std::allocator<mmtf::Transform> >::erase, "C++: std::vector<mmtf::Transform, std::allocator<mmtf::Transform> >::erase(class __gnu_cxx::__normal_iterator<struct mmtf::Transform *, class std::vector<struct mmtf::Transform, class std::allocator<struct mmtf::Transform> > >) --> class __gnu_cxx::__normal_iterator<struct mmtf::Transform *, class std::vector<struct mmtf::Transform, class std::allocator<struct mmtf::Transform> > >", pybind11::arg("__position"));
                                                                                                                                                                                                                                                                                                                                                                                                                                         ^~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_2.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = mmtf::Transform; _Alloc = std::allocator<mmtf::Transform>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Transform*, std::vector<mmtf::Transform> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Transform*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Transform*, std::vector<mmtf::Transform> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Transform*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = mmtf::Transform; _Alloc = std::allocator<mmtf::Transform>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Transform*, std::vector<mmtf::Transform> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Transform*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Transform*, std::vector<mmtf::Transform> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Transform*]
       erase(const_iterator __position)
       ^~~~~
std/stl_vector_2.cpp:144:578: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<mmtf::Transform*, std::vector<mmtf::Transform> > (class std::vector<mmtf::Transform>::*)(class __gnu_cxx::__normal_iterator<mmtf::Transform*, std::vector<mmtf::Transform> >, class __gnu_cxx::__normal_iterator<mmtf::Transform*, std::vector<mmtf::Transform> >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<struct mmtf::Transform *, class std::vector<struct mmtf::Transform, class std::allocator<struct mmtf::Transform> > > (std::vector<mmtf::Transform>::*)(class __gnu_cxx::__normal_iterator<struct mmtf::Transform *, class std::vector<struct mmtf::Transform, class std::allocator<struct mmtf::Transform> > >, class __gnu_cxx::__normal_iterator<struct mmtf::Transform *, class std::vector<struct mmtf::Transform, class std::allocator<struct mmtf::Transform> > >)) &std::vector<mmtf::Transform, std::allocator<mmtf::Transform> >::erase, "C++: std::vector<mmtf::Transform, std::allocator<mmtf::Transform> >::erase(class __gnu_cxx::__normal_iterator<struct mmtf::Transform *, class std::vector<struct mmtf::Transform, class std::allocator<struct mmtf::Transform> > >, class __gnu_cxx::__normal_iterator<struct mmtf::Transform *, class std::vector<struct mmtf::Transform, class std::allocator<struct mmtf::Transform> > >) --> class __gnu_cxx::__normal_iterator<struct mmtf::Transform *, class std::vector<struct mmtf::Transform, class std::allocator<struct mmtf::Transform> > >", pybind11::arg("__first"), pybind11::arg("__last"));
~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_2.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = mmtf::Transform; _Alloc = std::allocator<mmtf::Transform>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Transform*, std::vector<mmtf::Transform> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Transform*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Transform*, std::vector<mmtf::Transform> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Transform*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = mmtf::Transform; _Alloc = std::allocator<mmtf::Transform>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::Transform*, std::vector<mmtf::Transform> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::Transform*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::Transform*, std::vector<mmtf::Transform> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::Transform*]
       erase(const_iterator __position)
       ^~~~~
std/stl_vector_2.cpp:169:118: error: no matches converting function ‘resize’ to type ‘void (class std::vector<float>::*)(long unsigned int, float)’
   cl.def("resize", (void (std::vector<float>::*)(unsigned long, float)) &std::vector<float, std::allocator<float> >::resize, "C++: std::vector<float, std::allocator<float> >::resize(unsigned long, float) --> void", pybind11::arg("__new_size"), pybind11::arg("__x"));
                                                                                                                      ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_2.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:709:7: note: candidates are: void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = float]
       resize(size_type __new_size, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:689:7: note:                 void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]
       resize(size_type __new_size)
       ^~~~~~
std/stl_vector_2.cpp:180:309: error: no matches converting function ‘insert’ to type ‘class __gnu_cxx::__normal_iterator<float*, std::vector<float> > (class std::vector<float>::*)(class __gnu_cxx::__normal_iterator<float*, std::vector<float> >, const float&)’
   cl.def("insert", (class __gnu_cxx::__normal_iterator<float *, class std::vector<float, class std::allocator<float> > > (std::vector<float>::*)(class __gnu_cxx::__normal_iterator<float *, class std::vector<float, class std::allocator<float> > >, const float &)) &std::vector<float, std::allocator<float> >::insert, "C++: std::vector<float, std::allocator<float> >::insert(class __gnu_cxx::__normal_iterator<float *, class std::vector<float, class std::allocator<float> > >, const float &) --> class __gnu_cxx::__normal_iterator<float *, class std::vector<float, class std::allocator<float> > >", pybind11::arg("__position"), pybind11::arg("__x"));
                                                                                                                                                                                                                                                                                                                     ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_2.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = float; _Alloc = std::allocator<float>]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<float*, std::vector<float> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = float*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const float*, std::vector<float> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const float*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = float]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<float*, std::vector<float> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = float*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const float*, std::vector<float> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const float*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<float*, std::vector<float> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = float*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const float*, std::vector<float> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const float*; std::vector<_Tp, _Alloc>::value_type = float]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_2.cpp:46:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<float*, std::vector<float> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = float*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const float*, std::vector<float> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const float*; std::vector<_Tp, _Alloc>::value_type = float]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector_2.cpp:181:228: error: no matches converting function ‘insert’ to type ‘void (class std::vector<float>::*)(class __gnu_cxx::__normal_iterator<float*, std::vector<float> >, long unsigned int, const float&)’
   cl.def("insert", (void (std::vector<float>::*)(class __gnu_cxx::__normal_iterator<float *, class std::vector<float, class std::allocator<float> > >, unsigned long, const float &)) &std::vector<float, std::allocator<float> >::insert, "C++: std::vector<float, std::allocator<float> >::insert(class __gnu_cxx::__normal_iterator<float *, class std::vector<float, class std::allocator<float> > >, unsigned long, const float &) --> void", pybind11::arg("__position"), pybind11::arg("__n"), pybind11::arg("__x"));
                                                                                                                                                                                                                                    ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_2.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = float; _Alloc = std::allocator<float>]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<float*, std::vector<float> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = float*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const float*, std::vector<float> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const float*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = float]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<float*, std::vector<float> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = float*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const float*, std::vector<float> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const float*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<float*, std::vector<float> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = float*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const float*, std::vector<float> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const float*; std::vector<_Tp, _Alloc>::value_type = float]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_2.cpp:46:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<float*, std::vector<float> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = float*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const float*, std::vector<float> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const float*; std::vector<_Tp, _Alloc>::value_type = float]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector_2.cpp:182:293: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<float*, std::vector<float> > (class std::vector<float>::*)(class __gnu_cxx::__normal_iterator<float*, std::vector<float> >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<float *, class std::vector<float, class std::allocator<float> > > (std::vector<float>::*)(class __gnu_cxx::__normal_iterator<float *, class std::vector<float, class std::allocator<float> > >)) &std::vector<float, std::allocator<float> >::erase, "C++: std::vector<float, std::allocator<float> >::erase(class __gnu_cxx::__normal_iterator<float *, class std::vector<float, class std::allocator<float> > >) --> class __gnu_cxx::__normal_iterator<float *, class std::vector<float, class std::allocator<float> > >", pybind11::arg("__position"));
                                                                                                                                                                                                                                                                                                     ^~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_2.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<float*, std::vector<float> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = float*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const float*, std::vector<float> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const float*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<float*, std::vector<float> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = float*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const float*, std::vector<float> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const float*]
       erase(const_iterator __position)
       ^~~~~
std/stl_vector_2.cpp:183:395: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<float*, std::vector<float> > (class std::vector<float>::*)(class __gnu_cxx::__normal_iterator<float*, std::vector<float> >, class __gnu_cxx::__normal_iterator<float*, std::vector<float> >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<float *, class std::vector<float, class std::allocator<float> > > (std::vector<float>::*)(class __gnu_cxx::__normal_iterator<float *, class std::vector<float, class std::allocator<float> > >, class __gnu_cxx::__normal_iterator<float *, class std::vector<float, class std::allocator<float> > >)) &std::vector<float, std::allocator<float> >::erase, "C++: std::vector<float, std::allocator<float> >::erase(class __gnu_cxx::__normal_iterator<float *, class std::vector<float, class std::allocator<float> > >, class __gnu_cxx::__normal_iterator<float *, class std::vector<float, class std::allocator<float> > >) --> class __gnu_cxx::__normal_iterator<float *, class std::vector<float, class std::allocator<float> > >", pybind11::arg("__first"), pybind11::arg("__last"));
                                                                                                                                                                                                                                                                                                                                                                                                           ^~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_2.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<float*, std::vector<float> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = float*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const float*, std::vector<float> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const float*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<float*, std::vector<float> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = float*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const float*, std::vector<float> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const float*]
       erase(const_iterator __position)
       ^~~~~
[9/26] Building CXX object CMakeFiles/mmtf.dir/std/stl_vector_5.o
FAILED: CMakeFiles/mmtf.dir/std/stl_vector_5.o 
/usr/bin/c++  -DNDEBUG -Dmmtf_EXPORTS -I/home/danpf/git/binder/source -I../include -I/home/danpf/git/binder/build/pybind11/include -I/home/danpf/miniconda3/envs/py3/include/python3.6m -I../msgpack-c/include -fPIC -MD -MT CMakeFiles/mmtf.dir/std/stl_vector_5.o -MF CMakeFiles/mmtf.dir/std/stl_vector_5.o.d -o CMakeFiles/mmtf.dir/std/stl_vector_5.o -c std/stl_vector_5.cpp
std/stl_vector_5.cpp: In function ‘void bind_std_stl_vector_5(std::function<pybind11::module&(const std::__cxx11::basic_string<char>&)>&)’:
std/stl_vector_5.cpp:130:165: error: no matches converting function ‘resize’ to type ‘void (class std::vector<mmtf::GroupType>::*)(long unsigned int, struct mmtf::GroupType)’
   cl.def("resize", (void (std::vector<mmtf::GroupType>::*)(unsigned long, struct mmtf::GroupType)) &std::vector<mmtf::GroupType, std::allocator<mmtf::GroupType> >::resize, "C++: std::vector<mmtf::GroupType, std::allocator<mmtf::GroupType> >::resize(unsigned long, struct mmtf::GroupType) --> void", pybind11::arg("__new_size"), pybind11::arg("__x"));
                                                                                                                                                                     ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_5.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:709:7: note: candidates are: void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = mmtf::GroupType; _Alloc = std::allocator<mmtf::GroupType>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = mmtf::GroupType]
       resize(size_type __new_size, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:689:7: note:                 void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type) [with _Tp = mmtf::GroupType; _Alloc = std::allocator<mmtf::GroupType>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]
       resize(size_type __new_size)
       ^~~~~~
std/stl_vector_5.cpp:141:458: error: no matches converting function ‘insert’ to type ‘class __gnu_cxx::__normal_iterator<mmtf::GroupType*, std::vector<mmtf::GroupType> > (class std::vector<mmtf::GroupType>::*)(class __gnu_cxx::__normal_iterator<mmtf::GroupType*, std::vector<mmtf::GroupType> >, const struct mmtf::GroupType&)’
   cl.def("insert", (class __gnu_cxx::__normal_iterator<struct mmtf::GroupType *, class std::vector<struct mmtf::GroupType, class std::allocator<struct mmtf::GroupType> > > (std::vector<mmtf::GroupType>::*)(class __gnu_cxx::__normal_iterator<struct mmtf::GroupType *, class std::vector<struct mmtf::GroupType, class std::allocator<struct mmtf::GroupType> > >, const struct mmtf::GroupType &)) &std::vector<mmtf::GroupType, std::allocator<mmtf::GroupType> >::insert, "C++: std::vector<mmtf::GroupType, std::allocator<mmtf::GroupType> >::insert(class __gnu_cxx::__normal_iterator<struct mmtf::GroupType *, class std::vector<struct mmtf::GroupType, class std::allocator<struct mmtf::GroupType> > >, const struct mmtf::GroupType &) --> class __gnu_cxx::__normal_iterator<struct mmtf::GroupType *, class std::vector<struct mmtf::GroupType, class std::allocator<struct mmtf::GroupType> > >", pybind11::arg("__position"), pybind11::arg("__x"));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_5.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = mmtf::GroupType; _Alloc = std::allocator<mmtf::GroupType>]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = mmtf::GroupType; _Alloc = std::allocator<mmtf::GroupType>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::GroupType*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::GroupType*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = mmtf::GroupType]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = mmtf::GroupType; _Alloc = std::allocator<mmtf::GroupType>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::GroupType*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::GroupType*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = mmtf::GroupType; _Alloc = std::allocator<mmtf::GroupType>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::GroupType*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::GroupType*; std::vector<_Tp, _Alloc>::value_type = mmtf::GroupType]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_5.cpp:46:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = mmtf::GroupType; _Alloc = std::allocator<mmtf::GroupType>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::GroupType*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::GroupType*; std::vector<_Tp, _Alloc>::value_type = mmtf::GroupType]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector_5.cpp:142:326: error: no matches converting function ‘insert’ to type ‘void (class std::vector<mmtf::GroupType>::*)(class __gnu_cxx::__normal_iterator<mmtf::GroupType*, std::vector<mmtf::GroupType> >, long unsigned int, const struct mmtf::GroupType&)’
   cl.def("insert", (void (std::vector<mmtf::GroupType>::*)(class __gnu_cxx::__normal_iterator<struct mmtf::GroupType *, class std::vector<struct mmtf::GroupType, class std::allocator<struct mmtf::GroupType> > >, unsigned long, const struct mmtf::GroupType &)) &std::vector<mmtf::GroupType, std::allocator<mmtf::GroupType> >::insert, "C++: std::vector<mmtf::GroupType, std::allocator<mmtf::GroupType> >::insert(class __gnu_cxx::__normal_iterator<struct mmtf::GroupType *, class std::vector<struct mmtf::GroupType, class std::allocator<struct mmtf::GroupType> > >, unsigned long, const struct mmtf::GroupType &) --> void", pybind11::arg("__position"), pybind11::arg("__n"), pybind11::arg("__x"));
                                                                                                                                                                                                                                                                                                                                      ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_5.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = mmtf::GroupType; _Alloc = std::allocator<mmtf::GroupType>]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = mmtf::GroupType; _Alloc = std::allocator<mmtf::GroupType>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::GroupType*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::GroupType*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = mmtf::GroupType]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = mmtf::GroupType; _Alloc = std::allocator<mmtf::GroupType>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::GroupType*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::GroupType*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = mmtf::GroupType; _Alloc = std::allocator<mmtf::GroupType>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::GroupType*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::GroupType*; std::vector<_Tp, _Alloc>::value_type = mmtf::GroupType]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_5.cpp:46:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = mmtf::GroupType; _Alloc = std::allocator<mmtf::GroupType>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::GroupType*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::GroupType*; std::vector<_Tp, _Alloc>::value_type = mmtf::GroupType]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector_5.cpp:143:425: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<mmtf::GroupType*, std::vector<mmtf::GroupType> > (class std::vector<mmtf::GroupType>::*)(class __gnu_cxx::__normal_iterator<mmtf::GroupType*, std::vector<mmtf::GroupType> >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<struct mmtf::GroupType *, class std::vector<struct mmtf::GroupType, class std::allocator<struct mmtf::GroupType> > > (std::vector<mmtf::GroupType>::*)(class __gnu_cxx::__normal_iterator<struct mmtf::GroupType *, class std::vector<struct mmtf::GroupType, class std::allocator<struct mmtf::GroupType> > >)) &std::vector<mmtf::GroupType, std::allocator<mmtf::GroupType> >::erase, "C++: std::vector<mmtf::GroupType, std::allocator<mmtf::GroupType> >::erase(class __gnu_cxx::__normal_iterator<struct mmtf::GroupType *, class std::vector<struct mmtf::GroupType, class std::allocator<struct mmtf::GroupType> > >) --> class __gnu_cxx::__normal_iterator<struct mmtf::GroupType *, class std::vector<struct mmtf::GroupType, class std::allocator<struct mmtf::GroupType> > >", pybind11::arg("__position"));
                                                                                                                                                                                                                                                                                                                                                                                                                                         ^~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_5.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = mmtf::GroupType; _Alloc = std::allocator<mmtf::GroupType>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::GroupType*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::GroupType*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = mmtf::GroupType; _Alloc = std::allocator<mmtf::GroupType>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::GroupType*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::GroupType*]
       erase(const_iterator __position)
       ^~~~~
std/stl_vector_5.cpp:144:578: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<mmtf::GroupType*, std::vector<mmtf::GroupType> > (class std::vector<mmtf::GroupType>::*)(class __gnu_cxx::__normal_iterator<mmtf::GroupType*, std::vector<mmtf::GroupType> >, class __gnu_cxx::__normal_iterator<mmtf::GroupType*, std::vector<mmtf::GroupType> >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<struct mmtf::GroupType *, class std::vector<struct mmtf::GroupType, class std::allocator<struct mmtf::GroupType> > > (std::vector<mmtf::GroupType>::*)(class __gnu_cxx::__normal_iterator<struct mmtf::GroupType *, class std::vector<struct mmtf::GroupType, class std::allocator<struct mmtf::GroupType> > >, class __gnu_cxx::__normal_iterator<struct mmtf::GroupType *, class std::vector<struct mmtf::GroupType, class std::allocator<struct mmtf::GroupType> > >)) &std::vector<mmtf::GroupType, std::allocator<mmtf::GroupType> >::erase, "C++: std::vector<mmtf::GroupType, std::allocator<mmtf::GroupType> >::erase(class __gnu_cxx::__normal_iterator<struct mmtf::GroupType *, class std::vector<struct mmtf::GroupType, class std::allocator<struct mmtf::GroupType> > >, class __gnu_cxx::__normal_iterator<struct mmtf::GroupType *, class std::vector<struct mmtf::GroupType, class std::allocator<struct mmtf::GroupType> > >) --> class __gnu_cxx::__normal_iterator<struct mmtf::GroupType *, class std::vector<struct mmtf::GroupType, class std::allocator<struct mmtf::GroupType> > >", pybind11::arg("__first"), pybind11::arg("__last"));
~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_5.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = mmtf::GroupType; _Alloc = std::allocator<mmtf::GroupType>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::GroupType*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::GroupType*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = mmtf::GroupType; _Alloc = std::allocator<mmtf::GroupType>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = mmtf::GroupType*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const mmtf::GroupType*, std::vector<mmtf::GroupType> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const mmtf::GroupType*]
       erase(const_iterator __position)
       ^~~~~
std/stl_vector_5.cpp:169:118: error: no matches converting function ‘resize’ to type ‘void (class std::vector<short int>::*)(long unsigned int, short int)’
   cl.def("resize", (void (std::vector<short>::*)(unsigned long, short)) &std::vector<short, std::allocator<short> >::resize, "C++: std::vector<short, std::allocator<short> >::resize(unsigned long, short) --> void", pybind11::arg("__new_size"), pybind11::arg("__x"));
                                                                                                                      ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_5.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:709:7: note: candidates are: void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = short int; _Alloc = std::allocator<short int>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = short int]
       resize(size_type __new_size, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:689:7: note:                 void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type) [with _Tp = short int; _Alloc = std::allocator<short int>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]
       resize(size_type __new_size)
       ^~~~~~
std/stl_vector_5.cpp:180:309: error: no matches converting function ‘insert’ to type ‘class __gnu_cxx::__normal_iterator<short int*, std::vector<short int> > (class std::vector<short int>::*)(class __gnu_cxx::__normal_iterator<short int*, std::vector<short int> >, const short int&)’
   cl.def("insert", (class __gnu_cxx::__normal_iterator<short *, class std::vector<short, class std::allocator<short> > > (std::vector<short>::*)(class __gnu_cxx::__normal_iterator<short *, class std::vector<short, class std::allocator<short> > >, const short &)) &std::vector<short, std::allocator<short> >::insert, "C++: std::vector<short, std::allocator<short> >::insert(class __gnu_cxx::__normal_iterator<short *, class std::vector<short, class std::allocator<short> > >, const short &) --> class __gnu_cxx::__normal_iterator<short *, class std::vector<short, class std::allocator<short> > >", pybind11::arg("__position"), pybind11::arg("__x"));
                                                                                                                                                                                                                                                                                                                     ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_5.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = short int; _Alloc = std::allocator<short int>]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = short int; _Alloc = std::allocator<short int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<short int*, std::vector<short int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = short int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const short int*, std::vector<short int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const short int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = short int]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = short int; _Alloc = std::allocator<short int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<short int*, std::vector<short int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = short int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const short int*, std::vector<short int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const short int*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = short int; _Alloc = std::allocator<short int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<short int*, std::vector<short int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = short int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const short int*, std::vector<short int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const short int*; std::vector<_Tp, _Alloc>::value_type = short int]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_5.cpp:46:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = short int; _Alloc = std::allocator<short int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<short int*, std::vector<short int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = short int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const short int*, std::vector<short int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const short int*; std::vector<_Tp, _Alloc>::value_type = short int]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector_5.cpp:181:228: error: no matches converting function ‘insert’ to type ‘void (class std::vector<short int>::*)(class __gnu_cxx::__normal_iterator<short int*, std::vector<short int> >, long unsigned int, const short int&)’
   cl.def("insert", (void (std::vector<short>::*)(class __gnu_cxx::__normal_iterator<short *, class std::vector<short, class std::allocator<short> > >, unsigned long, const short &)) &std::vector<short, std::allocator<short> >::insert, "C++: std::vector<short, std::allocator<short> >::insert(class __gnu_cxx::__normal_iterator<short *, class std::vector<short, class std::allocator<short> > >, unsigned long, const short &) --> void", pybind11::arg("__position"), pybind11::arg("__n"), pybind11::arg("__x"));
                                                                                                                                                                                                                                    ^~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_5.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1128:2: note: candidates are: template<class _InputIterator, class> std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = short int; _Alloc = std::allocator<short int>]
  insert(const_iterator __position, _InputIterator __first,
  ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1084:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = short int; _Alloc = std::allocator<short int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<short int*, std::vector<short int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = short int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const short int*, std::vector<short int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const short int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = short int]
       insert(const_iterator __position, size_type __n, const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1059:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _Tp = short int; _Alloc = std::allocator<short int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<short int*, std::vector<short int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = short int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const short int*, std::vector<short int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const short int*]
       insert(const_iterator __position, initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/stl_vector.h:1042:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = short int; _Alloc = std::allocator<short int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<short int*, std::vector<short int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = short int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const short int*, std::vector<short int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const short int*; std::vector<_Tp, _Alloc>::value_type = short int]
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
In file included from /usr/include/c++/7/vector:69:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_5.cpp:46:
/usr/include/c++/7/bits/vector.tcc:114:5: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::const_iterator, const value_type&) [with _Tp = short int; _Alloc = std::allocator<short int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<short int*, std::vector<short int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = short int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const short int*, std::vector<short int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const short int*; std::vector<_Tp, _Alloc>::value_type = short int]
     vector<_Tp, _Alloc>::
     ^~~~~~~~~~~~~~~~~~~
std/stl_vector_5.cpp:182:293: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<short int*, std::vector<short int> > (class std::vector<short int>::*)(class __gnu_cxx::__normal_iterator<short int*, std::vector<short int> >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<short *, class std::vector<short, class std::allocator<short> > > (std::vector<short>::*)(class __gnu_cxx::__normal_iterator<short *, class std::vector<short, class std::allocator<short> > >)) &std::vector<short, std::allocator<short> >::erase, "C++: std::vector<short, std::allocator<short> >::erase(class __gnu_cxx::__normal_iterator<short *, class std::vector<short, class std::allocator<short> > >) --> class __gnu_cxx::__normal_iterator<short *, class std::vector<short, class std::allocator<short> > >", pybind11::arg("__position"));
                                                                                                                                                                                                                                                                                                     ^~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_5.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = short int; _Alloc = std::allocator<short int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<short int*, std::vector<short int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = short int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const short int*, std::vector<short int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const short int*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = short int; _Alloc = std::allocator<short int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<short int*, std::vector<short int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = short int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const short int*, std::vector<short int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const short int*]
       erase(const_iterator __position)
       ^~~~~
std/stl_vector_5.cpp:183:395: error: no matches converting function ‘erase’ to type ‘class __gnu_cxx::__normal_iterator<short int*, std::vector<short int> > (class std::vector<short int>::*)(class __gnu_cxx::__normal_iterator<short int*, std::vector<short int> >, class __gnu_cxx::__normal_iterator<short int*, std::vector<short int> >)’
   cl.def("erase", (class __gnu_cxx::__normal_iterator<short *, class std::vector<short, class std::allocator<short> > > (std::vector<short>::*)(class __gnu_cxx::__normal_iterator<short *, class std::vector<short, class std::allocator<short> > >, class __gnu_cxx::__normal_iterator<short *, class std::vector<short, class std::allocator<short> > >)) &std::vector<short, std::allocator<short> >::erase, "C++: std::vector<short, std::allocator<short> >::erase(class __gnu_cxx::__normal_iterator<short *, class std::vector<short, class std::allocator<short> > >, class __gnu_cxx::__normal_iterator<short *, class std::vector<short, class std::allocator<short> > >) --> class __gnu_cxx::__normal_iterator<short *, class std::vector<short, class std::allocator<short> > >", pybind11::arg("__first"), pybind11::arg("__last"));
                                                                                                                                                                                                                                                                                                                                                                                                           ^~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from ../include/mmtf/structure_data.hpp:17,
                 from std/stl_vector_5.cpp:46:
/usr/include/c++/7/bits/stl_vector.h:1206:7: note: candidates are: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = short int; _Alloc = std::allocator<short int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<short int*, std::vector<short int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = short int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const short int*, std::vector<short int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const short int*]
       erase(const_iterator __first, const_iterator __last)
       ^~~~~
/usr/include/c++/7/bits/stl_vector.h:1179:7: note:                 std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = short int; _Alloc = std::allocator<short int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<short int*, std::vector<short int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = short int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const short int*, std::vector<short int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const short int*]
       erase(const_iterator __position)
       ^~~~~
[10/26] Building CXX object CMakeFiles/mmtf.dir/std/locale_classes.o
ninja: build stopped: subcommand failed.
/home/danpf/git/binder/build/llvm-4.0.0/build_4.0.0.linux.danpf-lappytappy.release/bin/binder --root-module mmtf --prefix /home/danpf/git/mmtf-cpp/cmake_bindings/ --config config_file.config --annotate-includes -trace all_cmake_includes.hpp -- -I/home/danpf/git/mmtf-cpp/msgpack-c/include -I/home/danpf/git/mmtf-cpp/include -DMY_PROJECT_DEFINE -DNDEBUG -v
